<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Whenever | Shooter's Blog]]></title>
  <link href="http://shooterman.github.io/blog/categories/whenever/atom.xml" rel="self"/>
  <link href="http://shooterman.github.io/"/>
  <updated>2014-01-13T17:51:05+08:00</updated>
  <id>http://shooterman.github.io/</id>
  <author>
    <name><![CDATA[shooter]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[在rails中创建定时任务]]></title>
    <link href="http://shooterman.github.io/blog/2013/11/06/whenever/"/>
    <updated>2013-11-06T17:30:26+08:00</updated>
    <id>http://shooterman.github.io/blog/2013/11/06/whenever</id>
    <content type="html"><![CDATA[<p><a href="https://github.com/javan/whenever">whenever 源码</a></p>

<h3>安装 运行</h3>

<p>1 gem "whenever", "~> 0.8.4"</p>

<p>2 在命令行输入 <code>wheneverize .</code></p>

<p>生成config/schedule.rb</p>

<p>3 编写 schedule.rb</p>

<p><code>ruby
env :PATH, ENV['PATH']
set :output, {:error =&gt; File.join(Whenever.path, "log", "cron_err.log"), :standard =&gt;File.join(Whenever.path, "log", "cron_out.log")}
set :environment, 'development'
</code></p>

<p>4 执行</p>

<pre><code>whenever #根据schedule.rb 转换成cron语法, 不会写入crontab文件

whenever --update-crontab #写入crontab文件

whenever -s environment=development -w ~/minsheng/config/schedule.rb

whenever --help
</code></pre>

<h3>linux crontab 命令</h3>

<pre><code>crontab -l # 列出某个用户cron服务的详细内容
crontab -e # 修改
crontab -r # 删除某个用户的cron服务
</code></pre>

<h3>schedule.rb 示例</h3>

<p>```
every 3.hours do
  runner "MyModel.some_process"
  rake "my:rake:task"
  command "/usr/bin/my_great_command"
end</p>

<p>every 1.day, :at => '4:30 am' do
  runner "MyModel.task_to_run_at_four_thirty_in_the_morning"
end</p>

<p>every :hour do # Many shortcuts available: :hour, :day, :month, :year, :reboot
  runner "SomeModel.ladeeda"
end</p>

<p>every :sunday, :at => '12pm' do # Use any day of the week or :weekend, :weekday
  runner "Task.do_something_great"
end</p>

<p>every '0 0 27-31 * *' do
  command "echo 'you can use raw cron syntax too'"
end</p>

<h1>run this task only on servers with the :app role in Capistrano</h1>

<h1>see Capistrano roles section below</h1>

<p>every :day, :at => '12:20am', :roles => [:app] do
  rake "app_server:task"
end
```</p>

<h3>定义自己的工作类型</h3>

<p>```
job_type :awesome, '/usr/local/bin/awesome :task :fun_level'</p>

<p>every 2.hours do
  awesome "party", :fun_level => "extreme"
end
```</p>

<h3>whenever 默认的工作类型与定义</h3>

<p><code>
job_type :command, ":task :output"
job_type :rake,    "cd :path &amp;&amp; :environment_variable=:environment bundle exec rake :task --silent :output"
job_type :runner,  "cd :path &amp;&amp; script/rails runner -e :environment ':task' :output"
job_type :script,  "cd :path &amp;&amp; :environment_variable=:environment bundle exec script/:task :output"
</code></p>

<h3>RVM 集成</h3>

<p>...</p>

<h3>Capistrano 集成</h3>

<p>...</p>

<h3>资料</h3>

<p><a href="http://zh.wikipedia.org/wiki/Cron">What is Cron</a></p>

<p><a href="http://huacnlee.com/blog/create-rails-task-scheduler-by-rake-and-cronjob/">Rake + cronjob 创建计划任务</a></p>

<p><a href="http://railscasts.com/episodes/164-cron-in-ruby">164-cron-in-ruby</a></p>
]]></content>
  </entry>
  
</feed>
